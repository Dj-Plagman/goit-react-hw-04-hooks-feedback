{"version":3,"sources":["components/statistic/Statistics.module.css","components/sections/Section.module.css","components/feedback/Feedback.module.css","components/sections/Section.js","components/feedback/Feedback.js","components/statistic/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","FeedbackOpt","options","onLeaveFeedback","map","option","id","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","listItem","quantity","App","useState","setGood","setNeutral","setBad","Feedback","event","target","textContent","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,SAAW,+B,mBCArGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,IAAM,wB,qICiBTC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCcQI,EAlBK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC9B,OAAOD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACjB,wBACER,UAAWC,IAAOQ,OAElB,gBAAeF,EACfG,QAASL,EAJX,SAMGE,GAJIC,O,gBC2BIG,EA/BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIhB,UAAWC,IAAOgB,KAAtB,UACE,qBAAIjB,UAAWC,IAAOiB,SAAtB,mBACQ,sBAAMlB,UAAWC,IAAOkB,SAAxB,SAAmCP,OAE3C,qBAAIZ,UAAWC,IAAOiB,SAAtB,sBACW,sBAAMlB,UAAWC,IAAOkB,SAAxB,SAAmCN,OAE9C,qBAAIb,UAAWC,IAAOiB,SAAtB,kBACO,sBAAMlB,UAAWC,IAAOkB,SAAxB,SAAmCL,OAE1C,qBAAId,UAAWC,IAAOiB,SAAtB,oBACS,sBAAMlB,UAAWC,IAAOkB,SAAxB,SAAmCJ,OAE5C,qBAAIf,UAAWC,IAAOiB,SAAtB,+BACqB,IACnB,uBAAMlB,UAAWC,IAAOkB,SAAxB,UAAmCH,EAAnC,cCqCOI,MAlDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KA8BA,OACE,eAAC,EAAD,CAAS1B,MAAM,wBAAf,UACE,cAAC2B,EAAD,CACErB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAhCkB,SAAAqB,GAEtB,OADaA,EAAMC,OAAOC,aAExB,IAAK,OACHN,GAAQ,SAAAO,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHN,GAAW,SAAAO,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHN,GAAO,SAAAO,GAAO,OAAIA,EAAU,SAwB9B,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MApBkBH,EAAOC,EAAUC,EAqBnCE,mBAfFgB,KAAKC,MAAOrB,GAAQA,EAAOC,EAAUC,GAAQ,MAAQ,QC/B3DoB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.a78edaae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2l2QR\",\"listItem\":\"Statistics_listItem__3ht0S\",\"quantity\":\"Statistics_quantity__RoD3U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__hqYb1\",\"title\":\"Section_title__21kAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Feedback_btn__2t_CV\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Feedback.module.css';\r\n\r\nconst FeedbackOpt = ({ options, onLeaveFeedback }) => {\r\n  return options.map((option, id) => (\r\n    <button\r\n      className={styles.button}\r\n      key={id}\r\n      data-feedback={option}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nFeedbackOpt.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOpt;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      <li className={styles.listItem}>\r\n        Good: <span className={styles.quantity}>{good}</span>\r\n      </li>\r\n      <li className={styles.listItem}>\r\n        Neutral: <span className={styles.quantity}>{neutral}</span>\r\n      </li>\r\n      <li className={styles.listItem}>\r\n        Bad: <span className={styles.quantity}>{bad}</span>\r\n      </li>\r\n      <li className={styles.listItem}>\r\n        Total: <span className={styles.quantity}>{total}</span>\r\n      </li>\r\n      <li className={styles.listItem}>\r\n        Positive feedback:{' '}\r\n        <span className={styles.quantity}>{positivePercentage}%</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n  };\r\n\r\nexport default Statistics;","import { useState } from 'react';\r\n\r\nimport Section from './components/sections/Section';\r\nimport Feedback from './components/feedback/Feedback';\r\nimport Statistics from './components/statistic/Statistics';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const heandleFeedback = event => {\r\n    const name = event.target.textContent;\r\n    switch (name) {\r\n      case 'good':\r\n        setGood(prevGood => prevGood + 1);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(prevNeutral => prevNeutral + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(prevBad => prevBad + 1);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const totalFeedback = good + neutral + bad;\r\n    return totalFeedback;\r\n  };\r\n\r\n  const countPositivePercentage = () => {\r\n    const PositivePercentage =\r\n      Math.round((good / (good + neutral + bad)) * 100) || 0;\r\n    return PositivePercentage;\r\n  };\r\n\r\n  return (\r\n    <Section title=\"Please leave feedback\">\r\n      <Feedback\r\n        options={['good', 'neutral', 'bad']}\r\n        onLeaveFeedback={heandleFeedback}\r\n      />\r\n      <Statistics\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        total={countTotalFeedback()}\r\n        positivePercentage={countPositivePercentage()}\r\n      />\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}